apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: aisensei
data:
  POSTGRES_DB: aisensei
  POSTGRES_USER: aisensei
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: aisensei
type: Opaque
data:
  # Base64 encoded: aisensei123
  POSTGRES_PASSWORD: YWlzZW5zZWkxMjM=
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: aisensei
spec:
  ports:
    - port: 5432
      targetPort: 5432
  clusterIP: None
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: aisensei
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:16-alpine
          ports:
            - containerPort: 5432
              name: postgres
          envFrom:
            - configMapRef:
                name: postgres-config
            - secretRef:
                name: postgres-secret
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
              subPath: postgres
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - aisensei
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - aisensei
            initialDelaySeconds: 5
            periodSeconds: 5
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "standard"
        resources:
          requests:
            storage: 10Gi